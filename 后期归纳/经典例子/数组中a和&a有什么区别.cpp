/*
 数组中a和&a有什么区别
 对（*a)[5] 指针理解：
 	该指针不是二维指针，还是属于一维指针。
	指针加1相当于实际跳过4个int单元格，既 理论上指在a[5]的位置 。 
 
 (*a)[5] 强行转换位(int *)类型，既恢复到 指针加1，就指向下一个int单元地址 的状态 
 
*/

#include<stdio.h>
int main()
{
	int a[5]={1,2,3,4,5};	
	
//	int **pa = &a; &a是 int (*)[5]类型 
	int (*pa2)[5] = &a;
	
	int *ptr=(int *)(&a+1);	
    //＆a   这里的a不能理解为指向数组首地址的指针
    //求&a得到的不是指向指针的指针，而是指向长度为原数组大小的数组指针，即 int (*)[5]类型 
	printf("%d,%d",*(a+1),*(ptr-1));	
	
	return 0;
}

